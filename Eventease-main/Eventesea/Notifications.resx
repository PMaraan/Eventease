<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GAIAs8UQAJgthgDAbDEEAGaLIQAwWwwBgNliCADMFkMAYLYYAgCzxRAAmC2GAMBsMQQAZoshADBbDAGA
        2WIIAMwWQwBgthgCALPFEACYLYYAwGwxBABmiyEAMFsMAYDZYggAzBZDAGC2GAIAs8UQAJgthgDAbDEE
        AGaLIQAwWwwBgNliCADMFkMAYLYYAgCzxRAAmC2GAMBsMQQAZoshADBbDAGA2WIIAMwWQwBgthgCALPF
        EACYLYYAwGwxBABmiyEAMFsMAYDZYggAzBZDAGC2GAIAs8UQAJgthgDAbDEEAGaLIQAwWwwBgNliCADM
        FkMAYLYYAgCzxRAAmC2GAMBsMQQAZoshADBbDAGA2WIIAMwWQwBgthgCALPFEACYLYYAwGwxBABmiyEA
        MFsMAYDZYggAzBZDAGC2GAIAs8UQAJgthgDAbDEEAGaLIQAwWwwBgNliCADMFkMAYLYYAgCzxRAAmC2G
        AMBsMQQAZoshADBbDAGA2WIIAMwWQwBgthgCALPFEACYLYYAwGwxBABmiyEAMFsMAYDZYggAzBZDAGC2
        GAIAs8UQAJgthgDAbDEEAGaLIQAwWwwBgNliCADMFkMAYLYYAgCzxRAAmC2GAMBsMQQAZoshADBbDAGA
        2WIIAMwWQwBgthgCALPFEACYLYYAwGwxBABmiyEAMFsMAYDZYggAzBZDAGC2GAIAs8UQAJgthgDAbDEE
        AGaLIQAwWwwBgNliCADMFkMAYLYYAgCzxRAAmC2GAMBsMQQAZoshADBbDAGA2WIIAMwWQwBgthgCALPF
        EACYLYYAwGwxBABmiyEAMFsMAYDZYggAzBZDAGC2GAIAs8UQAJgthgDAbDEEAGaLIQAwWwwBgNliCADM
        FkMAYLYYAgCzxRAAmC2GAMBsMQQAZoshADBbDAGA2WIIAMwWQwBgthgCALPFEACYLYYAwGwxBABmiyEA
        MFsMAYDZYggAzBZDAGC2GAIAs8UQAJgthgDAbDEEAGaLIQAwWwwBgNliCADMFkMAYLYYAgCzxRAAmC2G
        AMBsMQQAZoshADBbDAGA2WIIAMwWQwBgthgCALPFEACYLYYAwGwxBABmiyEAMFsMAYDZYggAzBZDAGCy
        Hx/9f5S4ZIaMKH1qAAAAAElFTkSuQmCC
</value>
  </data>
</root>