<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>