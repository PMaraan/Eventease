<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>